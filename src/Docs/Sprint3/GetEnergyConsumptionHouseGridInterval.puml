@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}

actor PowerUser
PowerUser -> ":UI": 1- GetEnergyConsumptionOfHouseGrid
activate ":UI"
":UI" -> ":Controller": 1.1- getHouseGridListToString()
activate ":Controller"
":Controller" -> ":House": 1.1.1- getHouseGridListToString()
activate ":House"
":Controller" <-- ":House": 1.1.2- List of House Grids
deactivate ":House"
":UI" <-- ":Controller": 1.2- List of House Grids
PowerUser <-- ":UI": 1.3- List of House Grids

PowerUser -> ":UI": 2- Int House Grid Position
":UI" -> ":Controller": 2.1- getHouseGridByPosition(position)
":Controller" -> ":House": 2.2- getHouseGridByPosition (position)
activate ":House"
":Controller" <-- ":House": 2.3- House Grid
deactivate ":House"

PowerUser <- ":UI": 3- Ask for Start Date and End Date

PowerUser -> ":UI": 3.1- Insert Start Date (LocalDateTime)
PowerUser -> ":UI": 3.2- Insert End Date (LocalDateTime)
":UI" -> ":Controller": 3.2.1- GetEnergyConsumption(startDate, endDate)
":Controller" -> ":HouseGrid": 3.2.1.1- GetEnergyConsumption(startDate, endDate)
activate ":HouseGrid"
":Controller" <-- ":HouseGrid": 3.2.1.2- Energy Consumption
deactivate ":HouseGrid"
":UI" <-- ":Controller": 3.2.2- Energy Consumption
PowerUser <-- ":UI": 3.3- Energy Consumption
deactivate ":UI"

@enduml