@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}

actor RegularUser
RegularUser -> Main: run()
activate Main
Main -> Utils: List <String> getListClassName()
activate Utils
Utils -> Utils: List <String> readConfigFileToList()
Utils <-- Utils: listOfDeviceTypes
Main <-- Utils: listOfDeviceTypes
deactivate Utils

Main -> ":House": create (listOfDeviceType,mPeriodGrid,mPeriodDevice)
activate ":House"
":House" <-- ":House": new List <DeviceType> ()
loop n times
":House" <-- ":House": createDeviceType()
end
Main <-- ":House": house
deactivate ":House"
deactivate Main

RegularUser -> ":UI": addDeviceToRoom
activate ":UI"
":UI" -> ":Controller": geDeviceTypeList()
activate ":Controller"
":Controller" -> "House": geDeviceTypeList()
activate "House"
":Controller" <-- "House": listOfDeviceTypes
deactivate "House"
":UI" <-- ":Controller": listOfDeviceTypes
deactivate ":Controller"
RegularUser <-- ":UI": listOfDeviceTypes
RegularUser -> ":UI": getDeviceType
":UI" -> ":Controller": getDeviceType (p)
activate ":Controller"
":Controller" -> "House": getDeviceType (p)
activate "House"
":Controller" <-- "House": deviceType
deactivate "House"
":UI" <-- ":Controller": deviceType
deactivate ":Controller"
":UI" -> ":Controller": createDevice
activate ":Controller"
":Controller" -> ":DeviceType": createDevice
activate ":DeviceType"
":Controller" <-- ":DeviceType": device
deactivate ":DeviceType"
":UI" <-- ":Controller": device
deactivate ":Controller"

@enduml