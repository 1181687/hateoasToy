@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}

actor PowerUser
PowerUser -> ":UI": 1- GetEnergyConsumptionDataSeries
activate ":UI"
PowerUser <- ":UI": 2- Ask to choose HouseGrid/Room/Device
PowerUser -> ":UI": 3- int option
":UI" -> ":Controller": 3.1- getRoomListToString()
activate ":Controller"
":Controller" -> ":House": 3.1.1- getRoomListToString()
activate ":House"
":Controller" <-- ":House": 3.1.2- roomList
deactivate ":House"
":UI" <-- ":Controller": 3.2- roomList
PowerUser <-- ":UI": 3.3- roomList

PowerUser -> ":UI": 4- Int Room Position
":UI" -> ":Controller": 4.1- getRoomByPosition(position)
":Controller" -> ":House": 4.1.1- getRoomByPosition (position)
activate ":House"
":Controller" <-- ":House": 4.1.2- Room
deactivate ":House"

PowerUser <- ":UI": 5- Ask for Start Date and End Date

PowerUser -> ":UI": 5.1- Insert Start Date (LocalDateTime)
PowerUser -> ":UI": 5.2- Insert End Date (LocalDateTime)
":UI" -> ":Controller": 5.2.1- getRoomDataSeriesToString(startDate, endDate)
":Controller" -> ":Room": 5.2.1.1- getDataSeries(startDate, endDate)
activate ":Room"
":Controller" <-- ":Room": 5.2.1.2- Map
deactivate ":Room"
":Controller" -> ":Controller": 5.2.1.3- getDataSeriesToString(Map)
":Controller" --> ":UI": 5.2.2- dataSeries
PowerUser <-- ":UI": 5.3- dataSeries
deactivate ":UI"

@enduml