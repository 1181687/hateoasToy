@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor DeepSkyBlue
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor #A9DCDF

	ParticipantBorderColor Black
	ParticipantBackgroundColor DeepSkyBlue
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontSize 17
	ActorFontName Aapex
}

autonumber
actor User
User -> UI: EditConfigurationDevice
activate UI
UI -> Controller: getRoomListContent()
activate Controller
Controller -> House: getRoomListContent()
activate House
House -> RoomList: getRoomListContent()
activate RoomList
UI <-- RoomList: RoomListContent
deactivate RoomList
deactivate House
deactivate Controller
User <-- UI: RoomListContent

User -> UI: Int position
UI -> Controller: r = getRoom(position)
activate Controller
Controller -> House: r = getRoom(position)
activate House
House -> RoomList: r = getRoom(position)
activate RoomList
RoomList -> "r: Room": r = getRoom(position)
activate "r: Room"
Controller <-- "r: Room": r = position
deactivate "r: Room"
deactivate RoomList
deactivate House
deactivate Controller

User -> UI: GetDevicesInTheRoom
UI -> Controller: getDevicesInTheRoom()
activate Controller
Controller -> "r: Room": getDevicesInTheRoom()
activate "r: Room"
"r: Room" -> DeviceList: getDevicesInTheRoom()
activate DeviceList
UI <-- DeviceList: DevicesInTheRoom
deactivate DeviceList
deactivate "r: Room"
deactivate Controller
User <-- UI: DevicesInTheRoom

User -> UI: Int position
UI -> Controller: d = getDevice(position)
activate Controller
Controller -> "r: Room": d = getDevice(position)
activate "r: Room"
"r: Room" -> DeviceList: d = getDevice(position)
activate DeviceList
Controller <-- DeviceList : d = position
deactivate DeviceList
deactivate "r: Room"
deactivate Controller

User -> UI: GetDeviceAttributes
UI -> Controller: getDeviceAttributesToString()
activate Controller
Controller -> "d: Device": getDeviceAttributesToString()
activate "d: Device"
UI <-- "d: Device": string
deactivate "d: Device"
deactivate Controller
User <-- UI: string

User -> UI: SetDeviceName
UI -> Controller: setDeviceName()
activate Controller
Controller -> "d: Device": setDeviceName()
activate "d: Device"
UI <-- "d: Device": DeviceName
deactivate "d: Device"
deactivate Controller
User <-- UI: DeviceName

User -> UI: GetEditableAttributesContent
UI -> Controller: getEditableAttributesContent()
activate Controller
Controller -> "d: Device": getEditableAttributesContent()
activate "d: Device"
UI <-- "d: Device": EditableAttributesContent
deactivate "d: Device"
deactivate Controller
User <-- UI: EditableAttributesContent

User -> UI: SetDeviceSpecs
UI -> Controller: setDeviceSpecs()
activate Controller
Controller -> "d: Device": setAttributesDevType()
activate "d: Device"
UI <-- "d: Device": DeviceSpecs
deactivate "d: Device"
deactivate Controller
User <-- UI: DeviceSpecs

User -> UI: GetRoomList
UI -> Controller: getRoomListContent()
activate Controller
Controller -> House: getRoomListContent()
activate House
House -> RoomList: getRoomListContent()
activate RoomList
UI <-- RoomList: RoomList
deactivate RoomList
deactivate House
deactivate Controller
User <-- UI: RoomList

User -> UI: int position
UI -> Controller: r = getNewRoom(position)
activate Controller
Controller -> House: r = getNewRoom(position)
activate House
House -> RoomList: r = getNewRoom(position)
activate RoomList
Controller <-- RoomList: position
deactivate RoomList
deactivate House

Controller --> House : r = setLocation()
activate House
House -> "d: Device": r = setLocation()
activate "d: Device"
Controller <-- "d: Device": string
deactivate "d: Device"
deactivate House
UI <-- Controller: string
deactivate Controller
User <-- UI: string
deactivate UI


@enduml

