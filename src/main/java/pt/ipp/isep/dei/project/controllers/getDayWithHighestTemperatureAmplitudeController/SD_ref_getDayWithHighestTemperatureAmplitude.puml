@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}

activate ":GeographicalArea"
":GeographicalArea" -> ":SensorList": 1- getSensorListByTypeInAPeriod ()
activate ":SensorList"
":SensorList" -> ":Sensor": 1.1- getSensorsInGeographicalAreaByType ()
activate ":Sensor"
":Sensor" -> ":Reading": 1.1.1- checkMeasurementExistenceBetweenDates ()
activate ":Reading"
":Sensor" <-- ":Reading": 1.1.2- boolean
deactivate ":Reading"
":SensorList" <-- ":Sensor": 1.2- listOfSensors
deactivate ":Sensor"
":GeographicalArea" <-- ":SensorList": 2- listOfSensors
deactivate ":SensorList"
":GeographicalArea" -> ":SensorList": 3- getNearestSensorsToLocation (location)
activate ":SensorList"
":SensorList" -> ":Sensor": 3.1- getNearestSensorsToLocation (location)
activate ":Sensor"
":SensorList" <-- ":Sensor": 3.2- listOfNearestSensors
deactivate ":Sensor"
":GeographicalArea" <-- ":SensorList": 4- listOfNearestSensors
deactivate ":SensorList"
":GeographicalArea" -> ":SensorList": 5- getSensorWithMostRecentReading ()
activate ":SensorList"
":SensorList" -> ":Sensor": 5.1- getSensorWithMostRecentReading ()
activate ":Sensor"
":Sensor" -> ":Reading": 5.1.1- getSensorWithMostRecentReading ()
activate ":Reading"
":Sensor" <-- ":Reading": 5.1.2- sensorWithMostRecentReading
deactivate ":Reading"
":SensorList" <-- ":Sensor": 5.2- sensorWithMostRecentReading
deactivate ":Sensor"
":GeographicalArea" <-- ":SensorList": 6- sensorWithMostRecentReading
deactivate ":SensorList"
":GeographicalArea" -> ":Sensor": 7- getMaximumValueOfDay ()
activate ":Sensor"
":Sensor" -> ":Reading": 7.1- getMaximumValueOfDay ()
activate ":Reading"
":Sensor" <-- ":Reading": 7.2- maximumValueOfDay
deactivate ":Reading"
":GeographicalArea" <-- ":Sensor": 8- maximumValueOfDay
deactivate ":Sensor"
":GeographicalArea" -> ":Sensor": 9- getLowestValueOfDay ()
activate ":Sensor"
":Sensor" -> ":Reading": 9.1- getLowestValueOfDay ()
activate ":Reading"
":Sensor" <-- ":Reading": 9.2- lowestValueOfDay
deactivate ":Reading"
":GeographicalArea" <-- ":Sensor": 10- lowestValueOfDay



@enduml