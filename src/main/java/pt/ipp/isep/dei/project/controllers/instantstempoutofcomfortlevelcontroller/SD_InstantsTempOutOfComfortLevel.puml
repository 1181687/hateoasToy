@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
    ArrowColor Black
    ActorBorderColor DarkBlue
    LifeLineBorderColor black
    LifeLineBackgroundColor LightGrey

    ParticipantBorderColor Black
    ParticipantBackgroundColor LightGrey
    ParticipantFontStyle Bold

    ActorBackgroundColor DimGrey
    ActorFontColor DeepSkyBlue
    ActorFontStyle Bold
    ActorFontSize 17
    ActorFontName Aapex
}

autonumber
actor RegularUser
activate RegularUser
RegularUser -> ":InstantsOutOf\nTemperatureComfort\nLevelUI": instantsOutOfTemperatureComfort
activate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
":InstantsOutOf\nTemperatureComfort\nLevelUI" --> RegularUser: Rose above or Fell below option
deactivate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
RegularUser -> ":InstantsOutOf\nTemperatureComfort\nLevelUI": Chosen option
activate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
":InstantsOutOf\nTemperatureComfort\nLevelUI" -> ":InstantsOutOf\nTemperatureComfortLevel\nController" : Chosen option
activate ":InstantsOutOf\nTemperatureComfortLevel\nController"
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":HouseService" : location=getLocation()
activate ":HouseService"
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":HouseService" : geoAreaId=getGeoAreaId()
deactivate ":HouseService"
deactivate ":InstantsOutOf\nTemperatureComfortLevel\nController"
":InstantsOutOf\nTemperatureComfort\nLevelUI" --> RegularUser: House category
deactivate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
RegularUser -> ":InstantsOutOf\nTemperatureComfort\nLevelUI":  Chosen category
activate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
":InstantsOutOf\nTemperatureComfort\nLevelUI" -> ":InstantsOutOf\nTemperatureComfortLevel\nController" : Chosen category
activate ":InstantsOutOf\nTemperatureComfortLevel\nController"
":InstantsOutOf\nTemperatureComfort\nLevelUI" -> ":InstantsOutOf\nTemperatureComfortLevel\nController" : getRoomList()
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":RoomService": getRoomList()
activate ":RoomService"
":InstantsOutOf\nTemperatureComfortLevel\nController" <-- ":RoomService": RoomListDTO
deactivate ":RoomService"
":InstantsOutOf\nTemperatureComfort\nLevelUI" <-- ":InstantsOutOf\nTemperatureComfortLevel\nController" : RoomListDTO
deactivate ":InstantsOutOf\nTemperatureComfortLevel\nController"
RegularUser <-- ":InstantsOutOf\nTemperatureComfort\nLevelUI" : Room List content
deactivate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
RegularUser -> ":InstantsOutOf\nTemperatureComfort\nLevelUI":  Selected Room
activate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
":InstantsOutOf\nTemperatureComfort\nLevelUI" -> ":InstantsOutOf\nTemperatureComfortLevel\nController" : roomId
activate ":InstantsOutOf\nTemperatureComfortLevel\nController"
":InstantsOutOf\nTemperatureComfortLevel\nController" <-- ":InstantsOutOf\nTemperatureComfortLevel\nController" : sensorId
deactivate ":InstantsOutOf\nTemperatureComfortLevel\nController"
RegularUser <-- ":InstantsOutOf\nTemperatureComfort\nLevelUI" : Insert start and end Date
deactivate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
RegularUser -> ":InstantsOutOf\nTemperatureComfort\nLevelUI": startDate
activate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
RegularUser -> ":InstantsOutOf\nTemperatureComfort\nLevelUI":  endDate
":InstantsOutOf\nTemperatureComfort\nLevelUI" -> ":InstantsOutOf\nTemperatureComfortLevel\nController" : getComfortTemperature\n(startDate, endDate)
activate ":InstantsOutOf\nTemperatureComfortLevel\nController"
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":SensorsService": getComfortTemperature(startDate, endDate, option,\n category, location, geoAreaId, sensorTypeId)
activate ":SensorsService"
ref over ":SensorsService"
getComfortTemperature
end
":InstantsOutOf\nTemperatureComfortLevel\nController" <-- ":SensorsService" : mapComfortTemperature
deactivate ":SensorsService"
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":SensorsService": getRoomReadingsDTO(sensorId)
activate ":SensorsService"
ref over ":SensorsService"
getRoomReadings
end
":InstantsOutOf\nTemperatureComfortLevel\nController" <-- ":SensorsService" : roomReadingsDTO
deactivate ":SensorsService"
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":SensorsService": getMapOutOfTemperatureComfort\n(mapComfortTemperature, roomReadingsDTO)
activate ":SensorsService"
":InstantsOutOf\nTemperatureComfortLevel\nController" <-- ":SensorsService" : mapInstantsOutOfTemperatureComfort
deactivate ":SensorsService"
":InstantsOutOf\nTemperatureComfortLevel\nController" -> ":SensorsService": getListOfInstantsOutOf\nComfortTemperature(mapInstantsOutOfTemperatureComfort)
activate ":SensorsService"
":InstantsOutOf\nTemperatureComfortLevel\nController" <-- ":SensorsService" : listOfInstantsOutOfComfortTemperature
deactivate ":SensorsService"
":InstantsOutOf\nTemperatureComfort\nLevelUI" <-- ":InstantsOutOf\nTemperatureComfortLevel\nController"  : listOfInstantsOut\nOfComfortTemperature
deactivate ":InstantsOutOf\nTemperatureComfortLevel\nController"
RegularUser <-- ":InstantsOutOf\nTemperatureComfort\nLevelUI":  List Of Instants \nOut Of Comfort Temperature
deactivate ":InstantsOutOf\nTemperatureComfort\nLevelUI"
deactivate RegularUser



@enduml