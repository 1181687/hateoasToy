@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}

autonumber
actor AdminUser
activate AdminUser
actor AdminUser

AdminUser -> "ui : ImportReadings": Import geoAreaReadings
activate "ui : ImportReadings"
"ui : ImportReadings" --> AdminUser: Ask for the file path
deactivate "ui : ImportReadings"
AdminUser -> "ui : ImportReadings": File path
activate "ui : ImportReadings"
"ui : ImportReadings" -> "ctrl : ImportReadings\nController": readFile(file, path)
activate "ctrl : ImportReadings\nController"
"ctrl : ImportReadings\nController" -> "<<ProjectFileReader>>" :  createReader(path)
activate "<<ProjectFileReader>>"
"<<ProjectFileReader>>"  --> "ctrl : ImportReadings\nController": reader
deactivate "<<ProjectFileReader>>"
"ctrl : ImportReadings\nController" -> "<<ProjectFileReader>>":  readFile(file)
activate "<<ProjectFileReader>>"
ref over "<<ProjectFileReader>>"
readFile
end
"<<ProjectFileReader>>" --> "ctrl : ImportReadings\nController": readingDTOs
deactivate "<<ProjectFileReader>>"
"ctrl : ImportReadings\nController" --> "ui : ImportReadings": readingDTOs
deactivate "ctrl : ImportReadings\nController"
"ui : ImportReadings" --> AdminUser: Ask for confirmation
deactivate "ui : ImportReadings"
AdminUser -> "ui : ImportReadings": confirmation received
activate "ui : ImportReadings"
"ui : ImportReadings" -> "ctrl : ImportReadings\nController": importReadings()
activate "ctrl : ImportReadings\nController"
loop for each readingDTO
"ctrl : ImportReadings\nController" -> ReadingMapper: mapToEntity(readingDTO)
activate ReadingMapper
ReadingMapper --> "ctrl : ImportReadings\nController": geoAreaReading
deactivate ReadingMapper
"ctrl : ImportReadings\nController" -> "sensors : RoomSensorList": getSensorById(id)
activate "sensors : RoomSensorList"
"sensors : RoomSensorList" --> "sensor : RoomSensor": getSensor()
activate "sensor : RoomSensor"
"sensor : RoomSensor" --> "sensors : RoomSensorList": sensor
deactivate "sensor : RoomSensor"
"sensors : RoomSensorList" --> "ctrl : ImportReadings\nController": sensor
deactivate "sensors : RoomSensorList"
"ctrl : ImportReadings\nController" -> "sensor : RoomSensor": addReading(geoAreaReading)
activate "sensor : RoomSensor"
"sensor : RoomSensor" --> "ctrl : ImportReadings\nController": true
deactivate "sensor : RoomSensor"
end loop
ref over "ctrl : ImportReadings\nController"
updateRepository
end
"ctrl : ImportReadings\nController" --> "ui : ImportReadings": true
deactivate "ctrl : ImportReadings\nController"
"ui : ImportReadings" --> AdminUser: Give feedback
deactivate "ui : ImportReadings"

@enduml