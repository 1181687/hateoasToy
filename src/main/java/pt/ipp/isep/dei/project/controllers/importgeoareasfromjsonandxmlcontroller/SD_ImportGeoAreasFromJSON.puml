@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}
actor AdminUser
activate AdminUser
actor AdminUser

AdminUser -> ":ImportGeoAreas\nFromJSONUI": 1- importGeoAreasFromJSON
activate ":ImportGeoAreas\nFromJSONUI"
AdminUser <-- ":ImportGeoAreas\nFromJSONUI": 2- pathOfJsonFileRequest
deactivate ":ImportGeoAreas\nFromJSONUI"
AdminUser -> ":ImportGeoAreas\nFromJSONUI": 3- pathOfJSONFile
activate ":ImportGeoAreas\nFromJSONUI"
":ImportGeoAreas\nFromJSONUI" -> "JSONReader" : 3.1- readJSONFileToList (reader)
activate "JSONReader"
ref over "JSONReader"
parseToGeographicalAreaDTO
end
":ImportGeoAreas\nFromJSONUI" <-- "JSONReader" : 3.2- ListOfGeographicalAreasDTO
deactivate "JSONReader"
AdminUser <-- ":ImportGeoAreas\nFromJSONUI": 4- contentOfFile + confirmationMessage (Y/N)
deactivate ":ImportGeoAreas\nFromJSONUI"
AdminUser -> ":ImportGeoAreas\nFromJSONUI": 5- confirmationMessage
activate ":ImportGeoAreas\nFromJSONUI"
":ImportGeoAreas\nFromJSONUI" -> ":ImportGeoAreas\nFromJSONController": 5.1-importGeographicalAreasAndSensors\n(listOfGeoAreasDTO)
activate ":ImportGeoAreas\nFromJSONController"
loop
":ImportGeoAreas\nFromJSONController" -> "GeographicalAreaMapper" : 5.1.1- mapToEntity(geographicalAreaDTO)
activate "GeographicalAreaMapper"
"GeographicalAreaMapper" -> ":GeographicalArea" : 5.1.1.1- createGeographicalArea()
activate ":GeographicalArea"
"GeographicalAreaMapper" <-- ":GeographicalArea" : 5.1.1.2- geographicalArea
deactivate ":GeographicalArea"
":ImportGeoAreas\nFromJSONController" <-- "GeographicalAreaMapper" : 5.1.2- geographicalArea
deactivate "GeographicalAreaMapper"
":ImportGeoAreas\nFromJSONController" -> "SensorMapper" : 5.1.3- mapToEntity(sensor)
loop
activate "SensorMapper"
"SensorMapper" -> ":Sensor" : 5.1.3.1- createSensor()
activate ":Sensor"
"SensorMapper" <-- ":Sensor" : 5.1.3.2- sensor
deactivate ":Sensor"
end
":ImportGeoAreas\nFromJSONController" <-- "SensorMapper" : 5.1.4- sensor
 deactivate "SensorMapper"
":ImportGeoAreas\nFromJSONController"  -> ":GeographicalAreaList" : 5.1.5- AddGeographicalArea(geographicalArea)
activate ":GeographicalAreaList"
":ImportGeoAreas\nFromJSONController" <-- ":GeographicalAreaList" : 5.1.6- boolean
deactivate ":GeographicalAreaList"
end
":ImportGeoAreas\nFromJSONUI" <-- ":ImportGeoAreas\nFromJSONController": 5.2- boolean
deactivate ":ImportGeoAreas\nFromJSONController"
AdminUser <-- ":ImportGeoAreas\nFromJSONUI": 6- confirmationMessage
deactivate ":ImportGeoAreas\nFromJSONUI"
deactivate AdminUser

@enduml