@startuml
skinparam sequenceMessageAlign center
skinparam sequence {
	ArrowColor Black
	ActorBorderColor DarkBlue
	LifeLineBorderColor black
	LifeLineBackgroundColor LightGrey

	ParticipantBorderColor Black
	ParticipantBackgroundColor LightGrey
	ParticipantFontStyle Bold

	ActorBackgroundColor DimGrey
	ActorFontColor DeepSkyBlue
	ActorFontStyle Bold
	ActorFontSize 17
	ActorFontName Aapex
}

actor RegularUser
RegularUser -> ":GetDayWithHighest\nTemperatureAmplitudeUI": getDayWithHighest\nTemperatureAmplitude
activate ":GetDayWithHighest\nTemperatureAmplitudeUI"
":GetDayWithHighest\nTemperatureAmplitudeUI" --> RegularUser: insertFirstAndLastDate
RegularUser -> ":GetDayWithHighest\nTemperatureAmplitudeUI": firstDate, lastDate
":GetDayWithHighest\nTemperatureAmplitudeUI" -> ":GetDayWithHighest\nTemperatureAmplitude\nController": getDayWithHighest\nTemperatureAmplitude ()
activate ":GetDayWithHighest\nTemperatureAmplitude\nController"
":GetDayWithHighest\nTemperatureAmplitude\nController"-> ":House": getDailyAmplitudeInIntervalInHouseArea ()
activate ":House"
":House" -> ":GeographicalArea": getDailyAmplitudeInInterval ()
activate ":GeographicalArea"
":GeographicalArea" -> ":SensorList": getSensorListByTypeInAPeriod ()
activate ":SensorList"
":SensorList" -> ":Sensor": getSensorsInGeographicalAreaByType ()
activate ":Sensor"
":Sensor" -> ":Readings": checkMeasurementExistenceBetweenDates ()
activate ":Readings"
":Sensor" <-- ":Readings": boolean
deactivate ":Readings"
":SensorList" <-- ":Sensor": listOfSensors
deactivate ":Sensor"
":GeographicalArea" <-- ":SensorList": listOfSensors
deactivate ":SensorList"
":GeographicalArea" -> ":SensorList": getNearestSensorsToLocation (location)
activate ":SensorList"
":SensorList" -> ":Sensor": getNearestSensorsToLocation (location)
activate ":Sensor"
":SensorList" <-- ":Sensor": listOfNearestSensors
deactivate ":Sensor"
":GeographicalArea" <-- ":SensorList": listOfNearestSensors
deactivate ":SensorList"
":GeographicalArea" -> ":SensorList": getSensorWithMostRecentReadings ()
activate ":SensorList"
":SensorList" -> ":Sensor": getSensorWithMostRecentReadings ()
activate ":Sensor"
":Sensor" -> ":Readings": getSensorWithMostRecentReadings ()
activate ":Readings"
":Sensor" <-- ":Readings": sensorWithMostRecentReadings
deactivate ":Readings"
":SensorList" <-- ":Sensor": sensorWithMostRecentReadings
deactivate ":Sensor"
":GeographicalArea" <-- ":SensorList": sensorWithMostRecentReadings
deactivate ":SensorList"
":GeographicalArea" -> ":Sensor": getMaximumValueOfDay ()
activate ":Sensor"
":Sensor" -> ":Readings": getMaximumValueOfDay ()
activate ":Readings"
":Sensor" <-- ":Readings": maximumValueOfDay
deactivate ":Readings"
":GeographicalArea" <-- ":Sensor": maximumValueOfDay
deactivate ":Sensor"
":GeographicalArea" -> ":Sensor": getLowestValueOfDay ()
activate ":Sensor"
":Sensor" -> ":Readings": getLowestValueOfDay ()
activate ":Readings"
":Sensor" <-- ":Readings": lowestValueOfDay
deactivate ":Readings"
":GeographicalArea" <-- ":Sensor": lowestValueOfDay
deactivate ":Sensor"
":House" <-- ":GeographicalArea": mapOfDailyAmplitude
deactivate ":GeographicalArea"
":GetDayWithHighest\nTemperatureAmplitude\nController"<-- ":House": mapOfDailyAmplitude
deactivate ":House"
":GetDayWithHighest\nTemperatureAmplitudeUI" <-- ":GetDayWithHighest\nTemperatureAmplitude\nController": mapOfDailyAmplitude
deactivate ":GetDayWithHighest\nTemperatureAmplitude\nController"
":GetDayWithHighest\nTemperatureAmplitudeUI" -> ":GetDayWithHighest\nTemperatureAmplitude\nController": getHighestDailyAmplitude (mapOfDailyAmplitude)
activate ":GetDayWithHighest\nTemperatureAmplitude\nController"
":GetDayWithHighest\nTemperatureAmplitude\nController" -> ":House": getHighestDailyAmplitude (mapOfDailyAmplitude)
activate ":House"
":House" -> ":GeographicalArea": getHighestDailyAmplitude (mapOfDailyAmplitude)
activate ":GeographicalArea"
":House" <-- ":GeographicalArea": mapOfHighestDailyAmplitude
deactivate ":GeographicalArea"
":GetDayWithHighest\nTemperatureAmplitude\nController" <-- ":House": mapOfHighestDailyAmplitude
deactivate ":House"
":GetDayWithHighest\nTemperatureAmplitudeUI" <-- ":GetDayWithHighest\nTemperatureAmplitude\nController": mapOfHighestDailyAmplitude
deactivate ":GetDayWithHighest\nTemperatureAmplitude\nController"
":GetDayWithHighest\nTemperatureAmplitudeUI" <-- ":GetDayWithHighest\nTemperatureAmplitudeUI": displayResults ()
RegularUser <-- ":GetDayWithHighest\nTemperatureAmplitudeUI": String Result
deactivate ":GetDayWithHighest\nTemperatureAmplitudeUI"
@enduml