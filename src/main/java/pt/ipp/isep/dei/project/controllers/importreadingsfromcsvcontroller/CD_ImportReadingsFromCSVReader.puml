@startuml
skinparam linetype ortho

skinparam class {
	BackgroundColor PaleTurquoise
	ArrowColor Black
	BorderColor Black
	FontStyle Bold
}

hide circle

ImportReadingsFromCSVUI "1" -> "1" ImportReadingsFromCSVController
ImportReadingsFromCSVUI "1" -> "1" ReadingDTO
ImportReadingsFromCSVUI "1" -> "1" ReadingMapper
ImportReadingsFromCSVUI "1" -> "1" CSVReader
ImportReadingsFromCSVController "1" -> "1" ReadingMapper
ReadingMapper "1" -> "1" ReadingDTO
ImportReadingsFromCSVController "1" -> "1" GeographicalAreaList
ImportReadingsFromCSVController "1" -> "1" SensorList
ImportReadingsFromCSVController "1" -> "1" Sensor
GeographicalAreaList "1" -> "0*" SensorList
SensorList "1" -> "0*" Sensor

Class ImportReadingsFromCSVUI {
-controller: ImportReadingsFromCSVController
-readingDTO: ReadingDTO
+run()
+checkIfFileExistsAndCreateScanner()
+checkDateTimeAndStoreIt()
+checkValueAndStoreIt()
+storeNotImportedReadings()
+readLinesAndImportReadings()
}

Class ImportReadingsFromCSVController {
-geographicalAreaList: GeographicalAreaList
-allSensorInTheGeoAreas: SensorList
-sensor: Sensor
+checkIfSensorExistsById()
+addReadingToSensor()
}

Class ReadingMapper {
+newReadingDTO()
+mapToEntity()
+mapToDTO()
}

Class CSVReader {
+parseLine()
}

Class GeographicalAreaList {
-geoAreaList: GeographicalAreaList
+getAllSensors()
}

Class SensorList {
-listOfSensors: List<Sensor>
+checkIfSensorExistsById()
+getSensorById()
}

Class Sensor {
-id: String;
-startingDate LocalDateTime
-listOfReadings: List<Reading>
+addReadingsToList()
}

Class ReadingDTO {
-value: double
-dateTime: LocalDateTime
+getValue()
+setValue()
+getDateTime()
+setDateTime()
}
@enduml